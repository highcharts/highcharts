version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3
  browser-tools: circleci/browser-tools@1
  slack: circleci/slack@3

parameters:
  run_reset_tests:
    type: boolean
    default: false
  reset_tests:
    type: string
    default: ""
######### Anchors ####################
defaults: &defaults
  executor: node_image
  working_directory: /home/circleci/repo/highcharts
  environment:
    CYPRESS_CACHE_FOLDER: /home/circleci/repo/highcharts/.cache

persist_workspace: &persist_workspace
  - persist_to_workspace:
      root: ~/repo
      paths: .

load_workspace: &load_workspace
  - attach_workspace:
      at: ~/repo

load_source_from_cache: &load_source_from_cache
  - restore_cache:
      keys:
        - source-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
        - source-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}
        - source-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-

add_gh_keys: &add_gh_keys
  - add_ssh_keys:
      fingerprints:
        - "57:bb:46:ef:f4:22:f7:f3:67:5e:1f:2a:ad:7f:98:f6"
add_to_ssh_config: &add_to_ssh_config
  - run:
      name: Avoid hosts unknown for github
      command: echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
add_gh_user_config: &add_gh_user_config
  - run:
      name: Github user config
      command: |
        git config --global user.name "CircleCI"
        git config --global user.email "technical+circleci_mu@highsoft.com"
        git config --global core.editor vi

#######################################

executors:
  node_image:
    docker:
      - image: cimg/node:18.16.0-browsers

commands:
  generate_references_command:
    parameters:
      browsercount:
        type: integer
        default: 1
    steps:
      - run: "npx karma start test/karma-conf.js --tests highcharts/*/* --reference --browsercount << parameters.browsercount >> --no-fail-on-empty-test-suite"
      - run: "npx karma start test/karma-conf.js --tests maps/*/* --reference --browsercount << parameters.browsercount >> --no-fail-on-empty-test-suite"
      - run: "npx karma start test/karma-conf.js --tests stock/*/* --reference --browsercount << parameters.browsercount >> --no-fail-on-empty-test-suite"
      - run: "npx karma start test/karma-conf.js --tests gantt/*/* --reference --browsercount << parameters.browsercount >> --no-fail-on-empty-test-suite"

jobs:
  security_scan:
    docker:
      - image: returntocorp/semgrep #semgrep reccomends this docker image
    steps:
      - run:
          name: Scan ts-folder for OWASP top-ten vulnerabilities
          command: semgrep ci --config "p/owasp-top-ten" ts/

  checkout_and_install:
    <<: *defaults
    environment:
      CYPRESS_INSTALL_BINARY: 0 # skip installing the Cypress binary on npm install
    steps:
      # rather than using the checkout keyword we checkout via commandline
      # to avoid a huge and slow checkout depth
      - <<: *add_gh_keys
      - <<: *add_to_ssh_config
      - <<: *load_source_from_cache
      # Temporary workaround for https://discuss.circleci.com/t/22437
      - run: |
          if [ -n "$CIRCLE_TAG" ]
          then
            git fetch --force origin "refs/tags/${CIRCLE_TAG}:refs/tags/${CIRCLE_TAG}"
          fi
      - checkout
      - save_cache:
          key: source-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - run: node --version && npm --version
      - restore_cache:
          keys:
            - npm-deps-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "package.json" }}
            - npm-deps-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}
      - run: |
          npm ci --quiet --cache .npm --prefer-offline &&
          npm i --no-save cross-env pixelmatch
      - save_cache:
          paths:
            - /home/circleci/repo/highcharts/.npm
          key: npm-deps-{{ .Environment.HIGHCHARTS_CACHE_VERSION }}-{{ .Branch }}-{{ checksum "package.json" }}
      - run: npx gulp scripts
      - run: npx gulp dashboards/scripts
      - run: git diff --name-only --exit-code || (echo "Untracked files found. Did you forget to commit any transpiled files? Failing build now as this likely will trigger errors later in the build.." && exit 1)
      - <<: *persist_workspace

  generate_release_reference_images:
    <<: *defaults
    description: Generate visual tests reference images
    steps:
      - <<: *load_workspace
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: 116.0.5845.96 # TODO: remove when https://github.com/CircleCI-Public/browser-tools-orb/issues/90 is fixed
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            whereis google-chrome
          name: Check Chrome
      - generate_references_command
      - run: "mkdir -p /home/circleci/repo/tmp/latest/"
      - aws-s3/sync:
          from: "/home/circleci/repo/tmp/latest/"
          to: 's3://${HIGHCHARTS_VISUAL_TESTS_BUCKET}/visualtests/reference/latest/' # delete existing latest references in S3 location
          arguments: '--delete'
      - run:
          name: "Upload test results"
          command: "npx gulp dist-testresults --tag ${CIRCLE_TAG} --bucket ${HIGHCHARTS_VISUAL_TESTS_BUCKET}"
          when: always
      - <<: *persist_workspace

  reset_visual_references_job:
    <<: *defaults
    description: Reset reference images stored on S3 based. I.e recently added/changed samples will be treated as always being a part of this release.
    parameters:
      reset_tests:
        description: "Which tests to run?"
        type: string
        default: ""
    steps:
      - <<: *load_workspace
      - run: "npx gulp reset-visual-references --tests << parameters.reset_tests >> --reference --browsercount 2 --bucket ${HIGHCHARTS_STAGING_CODE_BUCKET}"


workflows:
  version: 2
  build_and_test:
    unless: << pipeline.parameters.run_reset_tests >>
    jobs:
      - checkout_and_install:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+(?:\.\d+)+?$/
          context: highcharts-common
      - generate_release_reference_images:
          requires: [checkout_and_install]
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+(?:\.\d+)+?$/
          context: highcharts-staging

  reset_visual_test_references:
    when: << pipeline.parameters.run_reset_tests >>
    jobs:
      - checkout_and_install:
          filters:
            branches:
              only: [master, tools/reset-visual-test]
      - reset_visual_references_job:
          requires: [checkout_and_install]
          reset_tests: << pipeline.parameters.reset_tests >>
