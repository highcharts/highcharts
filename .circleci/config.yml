version: 2.1

######### Anchors ####################
defaults: &defaults
  executor: node_image
  working_directory: /home/circleci/repo/highcharts

persist_workspace: &persist_workspace
  - persist_to_workspace:
      root: ~/repo
      paths: .

load_workspace: &load_workspace
  - attach_workspace:
      at: ~/repo

add_gh_keys: &add_gh_keys
  - add_ssh_keys:
      fingerprints:
        - "57:bb:46:ef:f4:22:f7:f3:67:5e:1f:2a:ad:7f:98:f6"
add_to_ssh_config: &add_to_ssh_config
  - run:
      name: Avoid hosts unknown for github
      command: echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  - run:
      name: Github user config
      command: |
        git config --global user.name CircleCI
        git config --global user.email technical+circleci_mu@highsoft.com

#######################################

executors:
  node_image:
    docker:
      - image: circleci/node:lts-browsers

commands:
  early_return_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is useful to avoid steps that will fail due to missing credentials.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi
  is_master_branch:
    description: >-
      Check to avoid certain steps/jobs being run from other branch than master.
    steps:
      - run:
          name: Fail if not master branch
          command: |
            if [ "${CIRCLE_BRANCH}" != "feature/circleci-integration" ]; then
              echo "Not master branch, aborting.."; exit 1;
            else
              echo "Proceeding from branch ${CIRCLE_BRANCH}..."
            fi

jobs:
  checkout_code:
    <<: *defaults
    steps:
      # rather than using the checkout keyword we checkout via commandline
      # to avoid a huge and slow checkout depth
     - <<: *add_gh_keys
     - <<: *add_to_ssh_config
     - run:
         name: Clone GitHub highcharts repository
         command: git clone -b ${CIRCLE_BRANCH} --single-branch ${CIRCLE_REPOSITORY_URL} --depth=1 /home/circleci/repo/highcharts
     - run:
         name: Clone Github highcharts-declarations-generator repository
         command: git clone -b master --single-branch git@github.com:highcharts/highcharts-declarations-generator.git --depth=1 /home/circleci/repo/highcharts-declarations-generator
     - <<: *persist_workspace

  build_dependencies:
    <<: *defaults
    steps:
      # Restore checked out code and built dependencies.
      - << : *load_workspace
      - run: node --version && npm --version
      - run: npm install --quiet
      - run:
          name: Install highcharts-declarations-generator
          command: cd /home/circleci/repo/highcharts-declarations-generator && npm install --quiet
      - run:
          name: Generate highcharts ts declarations
          command: cd /home/circleci/repo/highcharts && npx gulp jsdoc-dts && npx gulp lint-dts
      - <<: *persist_workspace

  test:
    <<: *defaults
    steps:
      - << : *load_workspace
      - run: npm test
      - run: mkdir ../test-results
      - run:
          name: Save test results
          command: |
            find . -type f -regex ".*TESTS.*xml" -exec cp {} ../test-results/ \;
          when: always
      - store_test_results:
          path: ../test-results
      - store_artifacts:
          path: ../test-results

  test_browsers:
    <<: *defaults
    steps:
      - early_return_for_forked_pull_requests # to avoid secrets being passed on to forked PR builds we don't run browser tests for forked PRs
      - << : *load_workspace
      - run: npm run ci-test
      - run: mkdir ../test-results
      - run:
          name: Save test results
          command: |
            find . -type f -regex ".*TESTS.*xml" -exec cp {} ../test-results/ \;
          when: always
      - store_test_results:
          path: ../test-results
      - store_artifacts:
          path: ../test-results

  build_dist:
    <<: *defaults
    steps:
      - is_master_branch
      - <<: *load_workspace
      - run:
          name: Generate highcharts packages
          command: npm run build
      - run:
          name: Generate changelog since last tag
          command: (git describe --abbrev=0 --tags | xargs -I{} node changelog/generate --since {}) && node changelog/generate-html
      - run: echo -e "Push changelog to highcharts repo not yet implemented.." #TODO
      #- store_artifacts:
      #    path: /home/circleci/repo/highcharts/build
      #- store_artifacts:
      #    path: /home/circleci/repo/highcharts/code
      - <<: *persist_workspace

  deploy:
    <<: *defaults
    steps:
      - is_master_branch
      - <<: *load_workspace
      - run:
          name: Install s3cmd
          command: sudo apt-get install -y -qq s3cmd
      - run: echo -e "Upload via s3cmd not yet implemented.." #TODO

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - build_dependencies
          filters:
            branches:
              only:
                - feature/circleci-integration
      - test_browsers:
          requires:
            - build_dependencies
      - hold_for_approval:
          type: approval
          requires:
            - test_browsers
          filters:
            branches:
              only:
                - not-a-branch
      - build_dist:
          requires:
            - hold_for_approval
          filters:
            branches:
              only:
                - feature/circleci-integration
