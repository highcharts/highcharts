# This is a basic workflow to help you get started with Actions

name: Dashboards Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the default branch
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]
    paths:
      - 'test/cypress/visual/**'
      - 'samples/cypress/dashboards/**'
      - 'samples/dashboards/**'
      - 'ts/Dashboards/**'
      - 'ts/Data/**'
      - 'css/**'
      - '.github/workflows/**'

permissions:
   contents: read # to fetch code (actions/checkout)

jobs:
  dashboards_test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Note that this adds a post-job step that saves the cache
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Lists modules if no cache
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install Dependencies
        run: npm i

      - name: Run Dashboards Tests
        run: npx gulp dashboards/test
