function createChart(data) {
    Highcharts.chart('container', {

        title: {
            text: 'Bell curve'
        },

        xAxis: [{
            title: {
                text: 'Data value'
            },
            alignTicks: false
        }],

        yAxis: [{
            title: { text: 'Probability density' }
        }, {
            visible: false,
            min: -1,
            max: 1
        }],

        series: [{
            name: 'Bell curve',
            type: 'bellcurve',
            data: data,
            zIndex: -1,
            enableMouseTracking: false
        }, {
            name: 'Observations',
            type: 'scatter',
            // Data is one dimensional with values being displayed on the x-axis
            data: data.map(x => [x, 0]),
            yAxis: 1,
            marker: {
                radius: 1.5
            },
            // Jitter on the y-axis to help separate datapoints,
            // preventing them form forming a line
            jitter: {
                y: 1
            },
            opacity: 0.5,
            enableMouseTracking: false
        }]
    });
}

// One-dimensional data
const data = [
    3.5993454979464623,
    3.308439047292145,
    4.84618516110036,
    4.564088494432831,
    2.5261271301384634,
    3.5049970013619687,
    2.6753938202331686,
    1.6950881673100695,
    0.5072271461522364,
    1.9567059327747942,
    4.475260242352859,
    6.235690984633717,
    0.8197476222746087,
    2.456963640450814,
    7.317645945407624,
    1.9844015150604994,
    0.5555878431522698,
    2.3097311031885637,
    5.936121614070334,
    1.6082812626558989,
    4.420086161900555,
    4.517807723324571,
    -0.5903827917969902,
    0.5766965716722035,
    1.6334755389749351,
    3.719226039723533,
    1.6499087260370855,
    6.098879185737058,
    4.048530692203931,
    4.66766606727561,
    1.6541160006151236,
    1.4774719809037136,
    2.415970310257731,
    0.5137968685747025,
    0.4843255409901004,
    3.9559532698836453,
    3.363951596940407,
    1.572486289543148,
    2.385570455639372,
    0.3463815647139801,
    5.07480834877508,
    0.8454406701144155,
    2.3106608923014207,
    2.0396015212170275,
    2.7363151881453107,
    2.4042171987468555,
    3.765387136137892,
    4.746422491218388,
    0.6918957979191069,
    6.290680128890552,
    0.6434029979843805,
    0.21498110202455933,
    5.10244504063811,
    2.6682942985879636,
    1.4410784144670377,
    3.9275182936548627,
    2.1246004503210525,
    4.522320779842955,
    3.2531527572106684,
    3.44653060098232,
    6.58069189810095,
    2.9599772022740543,
    -0.7749534958454509,
    2.1937045369807393,
    2.001724766973311,
    1.4050990441562425,
    3.639208725095613,
    0.8970832290298212,
    2.11127403945231,
    3.2337880263916183,
    2.3759988901599196,
    2.3627117865520844,
    4.00167233230216,
    7.4804906185584885,
    6.494318881353497,
    -0.8538258906094622,
    1.0360284853302797,
    6.568402928477909,
    0.9226305200969009,
    3.0139338540232803,
    3.6904217142490694,
    3.2620518008729245,
    3.41955138485977,
    4.273200629281492,
    6.274343949930948,
    0.3559667102051556,
    3.1149718278766585,
    8.091927583535726,
    3.6892147488477667,
    -0.3624814001018182,
    1.4405858501234987,
    1.0353812244229794,
    2.965393007671071,
    1.55496412579025,
    2.838058833295105,
    2.052785004670611,
    1.3429536732233676,
    5.740682696817219,
    1.3391878496567728,
    5.872664492756844,
    6.474005768636555,
    5.399207057669437,
    2.2561655682278747,
    3.2358348575678435,
    1.3558170757312424,
    5.089062640204363,
    2.8807200454106687,
    5.948293126824749,
    2.0275735638538936,
    2.896520607127511,
    0.8307047752578613,
    1.4687955550849092,
    3.17374281900183,
    0.7134488804664012,
    4.889128546724681,
    -0.21345794588317668,
    4.967850048136036,
    2.9238769362752643,
    8.07733942549876,
    0.30457558070524193,
    1.983165524935844,
    6.106474253541354,
    3.158525548260068,
    0.08406463261233998,
    3.0276186415189694,
    2.510765639188133,
    0.9260214878323758,
    0.36623020575333776,
    2.9546444686435893,
    -0.31804900345313714,
    5.675431154654848,
    0.46357486302552475,
    -1.4092255260781883,
    2.5546027271718934,
    2.5573082416246002,
    6.0596551658406845,
    -1.4081259213576427,
    1.3285770141096147,
    5.255266381207129,
    4.691532679737086,
    5.347792438535583,
    2.988886318873815,
    0.3316912693898777,
    2.2918465589975865,
    2.1633250845222496,
    0.7428149029148465,
    0.827982466181004,
    3.658208589672662,
    4.1021692997741654,
    3.045963216577163,
    6.2796037439732695,
    4.127461677060568,
    2.5151855103844145,
    5.577745977372903,
    2.7049426791959137,
    5.925592507128938,
    2.7089215381045157,
    -0.4382228765580276,
    4.319652984421827,
    8.647090878900624,
    3.5957647817573553,
    2.5754904403742716,
    -0.1937970480724367,
    5.250895682182908,
    5.377518422385022,
    0.6599066127699271,
    3.942179149767501,
    2.030185233280526,
    3.7708411433419213,
    5.0658866914356935,
    3.2854973871599387,
    4.395066137787679,
    3.0583361027971154,
    6.131954952612168,
    2.3783934592083824,
    4.991296557714132,
    4.269068127277249,
    2.072279576074539,
    4.47372487599794,
    -0.142538174414109,
    4.959461065818303,
    2.640551863524292,
    2.922365825392757,
    -0.5695665596222867,
    3.4200419764978545,
    0.7737240171199655,
    0.6767015282879445,
    2.94565058113984,
    5.061734538598029,
    1.4085229094964427,
    4.868317907906574,
    2.9637207982734504,
    1.5311219169340182,
    1.2362060249441795,
    2.9982542927241105,
    2.109393034696632,
    2.585307095150303,
    5.192005739087035,
    3.4035154380043062,
    3.2680900325828453
];

// Plugin to add bell curve zones and labels
(({ addEvent, seriesTypes }) => {
    const decoratedSeries = [];
    addEvent(seriesTypes.bellcurve, 'render', function () {

        if (decoratedSeries.includes(this)) {
            return;
        }

        decoratedSeries.push(this);
        const pointsInInterval = this.options.pointsInInterval,
            labels = ['3σ', '2σ', 'σ', 'μ', 'σ', '2σ', '3σ'],
            opacities = [0.1, 0.2, 0.6, 1, 1, 0.6, 0.2, 0.1];

        const zones = this.points
            .filter((point, i) => i % pointsInInterval === 0)
            .map((point, i) => ({
                value: point.x,
                fillColor: `rgba(44, 175, 254, ${opacities[i]})`
            }));

        this.update({
            zoneAxis: 'x',
            zones
        });

        this.points
            .filter(
                (point, i) => i % pointsInInterval === 0
            ).forEach((point, i) => {
                point.update({
                    dataLabels: {
                        enabled: true,
                        format: labels[i],
                        overflow: 'none',
                        crop: false,
                        y: -2,
                        style: {
                            fontSize: '13px'
                        }
                    }
                });
            });
    });
})(Highcharts);

createChart(data);
